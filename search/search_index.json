{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e1ctica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX Configurar cifrado con SSL Para conseguir que la conexi\u00f3n entre los clientes y nuestro servidor sea segura, debemos configurar el cifrado SSL en nuestro proxy inverso. Para ello, crearemos un certificado digital con la herramienta OpenSSL. sudo mkdir /etc/nginx/ssl # Creamos un directorio para almacenar el certificado y la clave privada del servidor. sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/server.key -out /etc/nginx/ssl/server.crt Y se nos pedir\u00e1 que indiquemos una serie de datos: Tras crear el certificado y la clave privada, ser\u00e1 necesario a\u00f1adir algunas l\u00edneas en el archivo de configuraci\u00f3n localizado en /etc/nginx/sites-available. Esta ser\u00e1 la nueva configuraci\u00f3n: Permitimos la conectividad a trav\u00e9s del puerto 443 con ufw ejecutando: sudo ufw allow 443/tcp Ahora, si intentamos acceder desde el navegador de nuestra m\u00e1quina anfitriona, aparecer\u00e1 una advertencia: Esto se debe a que el navegador no reconoce a la organizaci\u00f3n que expide nuestro certificado como fiable, pero no impide que entremos a la p\u00e1gina y visualicemos el contenido. Adem\u00e1s, si entramos a la informaci\u00f3n de seguridad, podemos comprobar que efectivamente la conexi\u00f3n est\u00e1 ahora cifrada: Y tambi\u00e9n podemos consultar los datos del certificado: Actualmente, s\u00f3lo podemos acceder al contenido a trav\u00e9s de HTTPS ya que el proxy s\u00f3lo \"escucha\" a trav\u00e9s del puerto 443. Podemos tambi\u00e9n hacer que escuche peticiones HTTP por el puerto 80 y redirigirles hacia una conexi\u00f3n segura. Para ello, volvemos a modificar el archivo de configuraci\u00f3n de /etc/nginx/sites-available y le agregamos el siguiente bloque: server { listen 80; server_name balanceo; access_log /var/log/nginx/http_access.log; return 301 https://$host$request_uri; } Por una cuesti\u00f3n del cach\u00e9 de los navegadores, es posible que entre las cabeceras no encontremos el c\u00f3digo HTTP que esperamos (301), ya que en lugar de tratar de solicitar un recurso del servidor, se est\u00e1 cargando informaci\u00f3n almacenada en cach\u00e9 para ahorrar recursos. Para evitar este problema, podemos utilizar curl para comprobar que la redirecci\u00f3n se est\u00e1 realizando correctamente: Donde se nos indica que el contenido al que tratamos de acceder no se encuentra en 192.168.0.22:80 sino que deber\u00edamos tratar de acceder a \u00e9l desde https://192.168.0.22/. Cuestiones finales Cuesti\u00f3n 1 El error 'ERR_SSL_PROTOCOL_ERROR' indica que algo est\u00e1 impidiendo el encriptado de la conexi\u00f3n con la p\u00e1gina, a pesar de que existe un certificado digital SSL que deber\u00eda estar llevando la tarea de encriptado. La manera de solucionarlo ser\u00e1 eliminar tanto el certificado como la clave privada del servidor (en este caso almacenadas en /etc/nginx/ssl/enrico-berlinguer) y generar un certificado y clave nuevos utilizando OpenSSL. Cuesti\u00f3n 2 Cuando el navegador arroja la advertencia NET::ERR_CERT_REVOKED al intentar acceder a un sitio web, es indicativo de que el servidor ha devuelto unas credenciales incorrectas. Esto puede deberse a que un tercero est\u00e9 intentando hacerse pasar por el propietario del dominio al que estamos intentando acceder o a que la entidad certificadora del dominio le haya retirado su certificado SSL o que el certificado se haya expedido al sitio web equivocado, haciendo que las credenciales sean efectivamente err\u00f3neas. Para solucionar este problema, debemos ponernos en contacto con la entidad certificadora que expidi\u00f3 el certificado que est\u00e1 provocando el error y nos emitan un nuevo certificado correcto para nuestro sitio web.","title":"Pr\u00e1ctica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX"},{"location":"#practica-25-proxy-inverso-y-balanceo-de-carga-con-ssl-en-nginx","text":"","title":"Pr\u00e1ctica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX"},{"location":"#configurar-cifrado-con-ssl","text":"Para conseguir que la conexi\u00f3n entre los clientes y nuestro servidor sea segura, debemos configurar el cifrado SSL en nuestro proxy inverso. Para ello, crearemos un certificado digital con la herramienta OpenSSL. sudo mkdir /etc/nginx/ssl # Creamos un directorio para almacenar el certificado y la clave privada del servidor. sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/server.key -out /etc/nginx/ssl/server.crt Y se nos pedir\u00e1 que indiquemos una serie de datos: Tras crear el certificado y la clave privada, ser\u00e1 necesario a\u00f1adir algunas l\u00edneas en el archivo de configuraci\u00f3n localizado en /etc/nginx/sites-available. Esta ser\u00e1 la nueva configuraci\u00f3n: Permitimos la conectividad a trav\u00e9s del puerto 443 con ufw ejecutando: sudo ufw allow 443/tcp Ahora, si intentamos acceder desde el navegador de nuestra m\u00e1quina anfitriona, aparecer\u00e1 una advertencia: Esto se debe a que el navegador no reconoce a la organizaci\u00f3n que expide nuestro certificado como fiable, pero no impide que entremos a la p\u00e1gina y visualicemos el contenido. Adem\u00e1s, si entramos a la informaci\u00f3n de seguridad, podemos comprobar que efectivamente la conexi\u00f3n est\u00e1 ahora cifrada: Y tambi\u00e9n podemos consultar los datos del certificado: Actualmente, s\u00f3lo podemos acceder al contenido a trav\u00e9s de HTTPS ya que el proxy s\u00f3lo \"escucha\" a trav\u00e9s del puerto 443. Podemos tambi\u00e9n hacer que escuche peticiones HTTP por el puerto 80 y redirigirles hacia una conexi\u00f3n segura. Para ello, volvemos a modificar el archivo de configuraci\u00f3n de /etc/nginx/sites-available y le agregamos el siguiente bloque: server { listen 80; server_name balanceo; access_log /var/log/nginx/http_access.log; return 301 https://$host$request_uri; } Por una cuesti\u00f3n del cach\u00e9 de los navegadores, es posible que entre las cabeceras no encontremos el c\u00f3digo HTTP que esperamos (301), ya que en lugar de tratar de solicitar un recurso del servidor, se est\u00e1 cargando informaci\u00f3n almacenada en cach\u00e9 para ahorrar recursos. Para evitar este problema, podemos utilizar curl para comprobar que la redirecci\u00f3n se est\u00e1 realizando correctamente: Donde se nos indica que el contenido al que tratamos de acceder no se encuentra en 192.168.0.22:80 sino que deber\u00edamos tratar de acceder a \u00e9l desde https://192.168.0.22/.","title":"Configurar cifrado con SSL"},{"location":"#cuestiones-finales","text":"","title":"Cuestiones finales"},{"location":"#cuestion-1","text":"El error 'ERR_SSL_PROTOCOL_ERROR' indica que algo est\u00e1 impidiendo el encriptado de la conexi\u00f3n con la p\u00e1gina, a pesar de que existe un certificado digital SSL que deber\u00eda estar llevando la tarea de encriptado. La manera de solucionarlo ser\u00e1 eliminar tanto el certificado como la clave privada del servidor (en este caso almacenadas en /etc/nginx/ssl/enrico-berlinguer) y generar un certificado y clave nuevos utilizando OpenSSL.","title":"Cuesti\u00f3n 1"},{"location":"#cuestion-2","text":"Cuando el navegador arroja la advertencia NET::ERR_CERT_REVOKED al intentar acceder a un sitio web, es indicativo de que el servidor ha devuelto unas credenciales incorrectas. Esto puede deberse a que un tercero est\u00e9 intentando hacerse pasar por el propietario del dominio al que estamos intentando acceder o a que la entidad certificadora del dominio le haya retirado su certificado SSL o que el certificado se haya expedido al sitio web equivocado, haciendo que las credenciales sean efectivamente err\u00f3neas. Para solucionar este problema, debemos ponernos en contacto con la entidad certificadora que expidi\u00f3 el certificado que est\u00e1 provocando el error y nos emitan un nuevo certificado correcto para nuestro sitio web.","title":"Cuesti\u00f3n 2"}]}